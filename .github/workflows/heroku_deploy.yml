name: Deploy

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github-actions
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DB_HOST: 127.0.0.1
      DB_NAME: github-actions
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_PORT: 5432
      ENVIRONMENT: test
    steps:
        - uses: actions/checkout@v2
        - name: Check file existence
          id: check_files
          uses: andstor/file-existence-action@v1
          with:
            files: "README.md, docker-compose.yml, docker-entrypoint.sh, Dockerfile, heroku.yml, manage.py, requirements.txt, setup.cfg, frontend/package.json, script/build.sh"
            allow_failure: true
        - name: Cache dependency
          uses: actions/cache@v2
          with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-
        - name: Setup python environment
          uses: actions/setup-python@v2
          with:
            python-version: '3.x'
        - name: Check Python version
          run: python --version
        - name: Install requirements
          run: pip install -r requirements.txt
        - name: Check Syntax
          run: pycodestyle .
        - name: Run Migrations
          run: python manage.py migrate
        - name: Run Test
          run: python manage.py test

  build:
    needs: test
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Deploy production
        if: github.ref == 'refs/heads/main'
        uses: akhileshns/heroku-deploy@v3.0.4
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: enrollxchange
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          branch: "main" #OPTIONAL and DEFAULT - 'HEAD' (a.k.a your current branch)
#           dontuseforce: false #OPTIONAL and DEFAULT - false
#           appdir: "" #OPTIONAL and DEFAULT - "". This is useful if the api you're deploying is in a subfolder
